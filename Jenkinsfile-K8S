pipeline {
     tools {
        maven 'Maven3'
    }
    agent any
    environment {
        registry = "512460775777.dkr.ecr.eu-west-1.amazonaws.com/spring-boot-test"
    }
    stages {
        stage('Checkout') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/marshallchabanga/springboot-app']]])
            }
        }
        stage('Build Jar'){
            steps{
                sh 'mvn clean install'
            }
        }
         // Building Docker images
        stage('Building image') {
             steps{
                 script {
                    docker.build registry
                }
            }
        }

            // Uploading Docker images into AWS ECR
        stage('Pushing to ECR') {
              steps{
                  script {
                sh 'aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin 512460775777.dkr.ecr.eu-west-1.amazonaws.com'
                sh 'docker push 512460775777.dkr.ecr.eu-west-1.amazonaws.com/spring-boot-test:latest'
                 }
               }
        }

        stage('K8S Deploy') {
            steps{
                script {
                withKubeConfig([credentialsId: 'K8S', serverUrl: '']) {
                sh ('kubectl apply -f  eks-deploy-k8s.yaml')
                }
            }
            }
       }
    }
}
